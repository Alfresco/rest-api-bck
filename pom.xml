<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.alfresco</groupId>
      <artifactId>alfresco-super-pom</artifactId>
      <version>6</version>
   </parent>

   <artifactId>rest-api-bck</artifactId>
   <version>1.0-SNAPSHOT</version>
   <name>Alfresco REST API BCK</name>
   <description>Performs tests to confirm the REST API is backwards compatible</description>

   <properties>
      <alfresco.platform.version>5.1.e</alfresco.platform.version>
      <runtime.solr.folder>${project.build.directory}/alf_data/solr</runtime.solr.folder>
      <ALFRESCO_SOLR4_DATA_DIR>${runtime.solr.folder}/data</ALFRESCO_SOLR4_DATA_DIR>
   </properties>

   <dependencies>
      <dependency>
         <groupId>org.alfresco</groupId>
         <artifactId>alfresco-repository</artifactId>
         <version>${alfresco.platform.version}</version>
      </dependency>
      <dependency>
         <groupId>com.h2database</groupId>
         <artifactId>h2</artifactId>
         <version>2.1.210</version>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <!-- Copied PostgreSQL dialect files to generate H2 dialect files 
              on-the-fly -->
         <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
               <execution>
                  <id>get-postgres-dialect</id>
                  <phase>generate-test-resources</phase>
                  <goals>
                     <goal>unpack</goal>
                  </goals>
                  <configuration>
                     <artifactItems>
                        <artifactItem>
                           <groupId>org.alfresco</groupId>
                           <artifactId>alfresco-repository</artifactId>
                           <version>${alfresco.platform.version}</version>
                        </artifactItem>
                     </artifactItems>
                     <includes>alfresco/dbscripts/create/org.hibernate.dialect.PostgreSQLDialect/*,alfresco/ibatis/org.hibernate.dialect.PostgreSQLDialect/*</includes>
                     <outputDirectory>${project.build.testOutputDirectory}</outputDirectory>
                  </configuration>
               </execution>
               <execution>
                  <id>unpack-alfresco</id>
                  <phase>prepare-package</phase>
                  <goals>
                     <goal>unpack</goal>
                  </goals>
                  <configuration>
                     <outputDirectory>${project.build.directory}/war</outputDirectory>
                     <artifactItems>
                        <artifactItem>
                           <groupId>org.alfresco</groupId>
                           <artifactId>alfresco-platform</artifactId>
                           <type>war</type>
                           <version>${alfresco.platform.version}</version>
                        </artifactItem>
                     </artifactItems>
                  </configuration>
               </execution>
               <!-- Download and unpack the solr4 config zip file -->
               <execution>
                  <id>unpack-solr4-config</id>
                  <phase>generate-resources</phase>
                  <goals>
                     <goal>unpack</goal>
                  </goals>
                  <configuration>
                     <outputDirectory>${project.build.directory}/solr4</outputDirectory>
                     <artifactItems>
                        <artifactItem>
                           <groupId>org.alfresco</groupId>
                           <artifactId>alfresco-solr4</artifactId>
                           <version>${alfresco.platform.version}</version>
                           <classifier>config</classifier>
                           <overWrite>true</overWrite>
                           <type>zip</type>
                        </artifactItem>
                     </artifactItems>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         
         <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
               <execution>
                  <id>config-h2-dialect</id>
                  <phase>generate-test-resources</phase>
                  <goals>
                     <goal>run</goal>
                  </goals>
                  <configuration>
                     <target>
                        <move verbose="true"
                           file="${project.build.testOutputDirectory}/alfresco/dbscripts/create/org.hibernate.dialect.PostgreSQLDialect"
                           tofile="${project.build.testOutputDirectory}/alfresco/dbscripts/create/org.hibernate.dialect.H2Dialect" />
                        <move verbose="true"
                           file="${project.build.testOutputDirectory}/alfresco/ibatis/org.hibernate.dialect.PostgreSQLDialect"
                           tofile="${project.build.testOutputDirectory}/alfresco/ibatis/org.hibernate.dialect.H2Dialect" />
                     </target>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
               <execution>
                  <id>filter-copy-solr4-config</id>
                  <goals>
                     <goal>copy-resources</goal>
                  </goals>
                  <phase>generate-resources</phase>
                  <configuration>
                     <outputDirectory>${runtime.solr.folder}</outputDirectory>
                     <resources>
                        <resource>
                           <directory>${project.build.directory}/solr4</directory>
                           <excludes>
                              <exclude>workspace-SpacesStore/conf/solrcore.properties</exclude>
                              <exclude>archive-SpacesStore/conf/solrcore.properties</exclude>
                           </excludes>
                           <filtering>false</filtering>
                        </resource>
                        <resource>
                           <directory>${project.build.directory}/solr4</directory>
                           <includes>
                              <include>workspace-SpacesStore/conf/solrcore.properties</include>
                              <include>archive-SpacesStore/conf/solrcore.properties</include>
                           </includes>
                           <filtering>true</filtering>
                        </resource>
                     </resources>
                     <useDefaultDelimiters>false</useDefaultDelimiters>
                     <delimiters>
                        <delimiter>@@</delimiter>
                     </delimiters>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         
         <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
            <version>2.2</version>
            <executions>
               <execution>
                  <id>run-embedded</id>
                  <goals>
                     <goal>run</goal>
                  </goals>
                  <phase>pre-integration-test</phase>
                  <configuration>
                     <ignorePackaging>true</ignorePackaging>
                     <useSeparateTomcatClassLoader>true</useSeparateTomcatClassLoader>
                     <systemProperties>
                        <java.io.tmpdir>${project.build.directory}</java.io.tmpdir>
                        <index.subsystem.name>solr4</index.subsystem.name>
                        <solr.host>localhost</solr.host>
                        <solr.secureComms>none</solr.secureComms>
                        <solr.port>8080</solr.port>
                        <solr.port.ssl></solr.port.ssl>
                        <solr.backup.alfresco.numberToKeep>0</solr.backup.alfresco.numberToKeep>
                        <solr.backup.archive.numberToKeep>0</solr.backup.archive.numberToKeep>
                        <solr.solr.home>${runtime.solr.folder}</solr.solr.home>
                        <solr.solr.model.dir>${runtime.solr.folder}/alfrescoModels</solr.solr.model.dir>
                        <solr.solr.content.dir>${runtime.solr.folder}/content</solr.solr.content.dir>
                     </systemProperties>
                     <contextFile>${project.basedir}/tomcat/alfresco-context.xml</contextFile>
                     <tomcatUsers>${project.basedir}/tomcat/tomcat-users.xml</tomcatUsers>
                     <delegate>true</delegate>
                     <fork>true</fork>
                     <webapps>
                        <webapp>
                            <groupId>org.alfresco</groupId>
                            <artifactId>alfresco-solr4</artifactId>
                            <version>${alfresco.platform.version}</version>
                            <contextPath>/solr4</contextPath>
                            <type>war</type>
                            <asWebapp>true</asWebapp>
                            <contextFile>${project.basedir}/tomcat/solr-context.xml</contextFile>
                        </webapp>
                    </webapps>
                  </configuration>
               </execution>
            </executions>
            <dependencies>
               <dependency>
                  <groupId>com.h2database</groupId>
                  <artifactId>h2</artifactId>
                  <version>2.1.210</version>
               </dependency>
            </dependencies>
         </plugin>

         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.4.0</version>
            <executions>
               <execution>
                  <id>execute-load-data-collection</id>
                  <goals>
                     <goal>exec</goal>
                  </goals>
                  <phase>integration-test</phase>
                  <configuration>
                     <executable>newman</executable>
                     <workingDirectory>${project.basedir}</workingDirectory>
                     <arguments>
                        <argument>-c</argument>
                        <argument>collections/load-data.json</argument>
                        <argument>-e</argument>
                        <argument>localhost-env.json</argument>
                        <argument>-O</argument>
                        <argument>target/load-data-wire.log</argument>
                        <argument>-t</argument>
                        <argument>target/load-data-junit.xml</argument>
                        <argument>-H</argument>
                        <argument>target/load-data-report.html</argument>
                        <argument>-G</argument>
                        <argument>target/global-variables.json</argument>
                        <argument>-x</argument>
                     </arguments>
                  </configuration>
               </execution>
               <execution>
                  <id>execute-people-collection</id>
                  <goals>
                     <goal>exec</goal>
                  </goals>
                  <phase>integration-test</phase>
                  <configuration>
                     <executable>newman</executable>
                     <workingDirectory>${project.basedir}</workingDirectory>
                     <arguments>
                        <argument>-c</argument>
                        <argument>collections/people.json</argument>
                        <argument>-e</argument>
                        <argument>localhost-env.json</argument>
                        <argument>-g</argument>
                        <argument>target/global-variables.json</argument>
                        <argument>-O</argument>
                        <argument>target/people-wire.log</argument>
                        <argument>-t</argument>
                        <argument>target/people-junit.xml</argument>
                        <argument>-H</argument>
                        <argument>target/people-report.html</argument>
                        <argument>-x</argument>
                     </arguments>
                  </configuration>
               </execution>	
               <execution>
                  <id>execute-sites-collection</id>
                  <goals>
                     <goal>exec</goal>
                  </goals>
                  <phase>integration-test</phase>
                  <configuration>
                     <executable>newman</executable>
                     <workingDirectory>${project.basedir}</workingDirectory>
                     <arguments>
                        <argument>-c</argument>
                        <argument>collections/sites.json</argument>
                        <argument>-e</argument>
                        <argument>localhost-env.json</argument>
                        <argument>-g</argument>
                        <argument>target/global-variables.json</argument>
                        <argument>-O</argument>
                        <argument>target/sites-wire.log</argument>
                        <argument>-t</argument>
                        <argument>target/sites-junit.xml</argument>
                        <argument>-H</argument>
                        <argument>target/sites-report.html</argument>
                        <argument>-x</argument>
                     </arguments>
                  </configuration>
               </execution>
               <execution>
                  <id>execute-networks-collection</id>
                  <goals>
                     <goal>exec</goal>
                  </goals>
                  <phase>integration-test</phase>
                  <configuration>
                     <executable>newman</executable>
                     <workingDirectory>${project.basedir}</workingDirectory>
                     <arguments>
                        <argument>-c</argument>
                        <argument>collections/networks.json</argument>
                        <argument>-e</argument>
                        <argument>localhost-env.json</argument>
                        <argument>-g</argument>
                        <argument>target/global-variables.json</argument>
                        <argument>-O</argument>
                        <argument>target/networks-wire.log</argument>
                        <argument>-t</argument>
                        <argument>target/networks-junit.xml</argument>
                        <argument>-H</argument>
                        <argument>target/networks-report.html</argument>
                        <argument>-x</argument>
                     </arguments>
                  </configuration>
               </execution>
               <execution>
                  <id>execute-comments-collection</id>
                  <goals>
                     <goal>exec</goal>
                  </goals>
                  <phase>integration-test</phase>
                  <configuration>
                     <executable>newman</executable>
                     <workingDirectory>${project.basedir}</workingDirectory>
                     <arguments>
                        <argument>-c</argument>
                        <argument>collections/comments.json</argument>
                        <argument>-e</argument>
                        <argument>localhost-env.json</argument>
                        <argument>-g</argument>
                        <argument>target/global-variables.json</argument>
                        <argument>-O</argument>
                        <argument>target/comments-wire.log</argument>
                        <argument>-t</argument>
                        <argument>target/comments-junit.xml</argument>
                        <argument>-H</argument>
                        <argument>target/comments-report.html</argument>
                        <argument>-x</argument>
                     </arguments>
                  </configuration>
               </execution>
               <execution>
                  <id>execute-ratings-collection</id>
                  <goals>
                     <goal>exec</goal>
                  </goals>
                  <phase>integration-test</phase>
                  <configuration>
                     <executable>newman</executable>
                     <workingDirectory>${project.basedir}</workingDirectory>
                     <arguments>
                        <argument>-c</argument>
                        <argument>collections/ratings.json</argument>
                        <argument>-e</argument>
                        <argument>localhost-env.json</argument>
                        <argument>-g</argument>
                        <argument>target/global-variables.json</argument>
                        <argument>-O</argument>
                        <argument>target/ratings-wire.log</argument>
                        <argument>-t</argument>
                        <argument>target/ratings-junit.xml</argument>
                        <argument>-H</argument>
                        <argument>target/ratings-report.html</argument>
                        <argument>-x</argument>
                     </arguments>
                  </configuration>
               </execution>
               <execution>
                  <id>execute-favorites-collection</id>
                  <goals>
                     <goal>exec</goal>
                  </goals>
                  <phase>integration-test</phase>
                  <configuration>
                     <executable>newman</executable>
                     <workingDirectory>${project.basedir}</workingDirectory>
                     <arguments>
                        <argument>-c</argument>
                        <argument>collections/favorites.json</argument>
                        <argument>-e</argument>
                        <argument>localhost-env.json</argument>
                        <argument>-g</argument>
                        <argument>target/global-variables.json</argument>
                        <argument>-O</argument>
                        <argument>target/favorites-wire.log</argument>
                        <argument>-t</argument>
                        <argument>target/favorites-junit.xml</argument>
                        <argument>-H</argument>
                        <argument>target/favorites-report.html</argument>
                        <argument>-x</argument>
                     </arguments>
                  </configuration>
               </execution>	
               <execution>
                  <id>execute-tags-collection</id>
                  <goals>
                     <goal>exec</goal>
                  </goals>
                  <phase>integration-test</phase>
                  <configuration>
                     <executable>newman</executable>
                     <workingDirectory>${project.basedir}</workingDirectory>
                     <arguments>
                        <argument>-c</argument>
                        <argument>collections/tags.json</argument>
                        <argument>-e</argument>
                        <argument>localhost-env.json</argument>
                        <argument>-g</argument>
                        <argument>target/global-variables.json</argument>
                        <argument>-O</argument>
                        <argument>target/tags-wire.log</argument>
                        <argument>-t</argument>
                        <argument>target/tags-junit.xml</argument>
                        <argument>-H</argument>
                        <argument>target/tags-report.html</argument>
                        <argument>-x</argument>
                     </arguments>
                  </configuration>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>
  <profiles>
    <profile>
      <id>5.2</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.4.0</version>
            <executions>
              <execution>
                <id>execute-sites-5.2-collection</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>integration-test</phase>
                <configuration>
                  <executable>newman</executable>
                  <workingDirectory>${project.basedir}</workingDirectory>
                  <arguments>
                    <argument>-c</argument>
                    <argument>collections/5.2/sites.json</argument>
                    <argument>-e</argument>
                    <argument>localhost-env.json</argument>
                    <argument>-g</argument>
                    <argument>target/global-variables.json</argument>
                    <argument>-O</argument>
                    <argument>target/sites-5-2-wire.log</argument>
                    <argument>-t</argument>
                    <argument>target/sites-5-2-junit.xml</argument>
                    <argument>-H</argument>
                    <argument>target/sites-5-2-report.html</argument>
                    <argument>-x</argument>
                  </arguments>
                </configuration>
              </execution>
              <execution>
                <id>execute-nodes-5.2-collection</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>integration-test</phase>
                <configuration>
                  <executable>newman</executable>
                  <workingDirectory>${project.basedir}</workingDirectory>
                  <arguments>
                    <argument>-c</argument>
                    <argument>collections/5.2/nodes.json</argument>
                    <argument>-e</argument>
                    <argument>localhost-env.json</argument>
                    <argument>-g</argument>
                    <argument>target/global-variables.json</argument>
                    <argument>-O</argument>
                    <argument>target/nodes-5-2-wire.log</argument>
                    <argument>-t</argument>
                    <argument>target/nodes-5-2-junit.xml</argument>
                    <argument>-H</argument>
                    <argument>target/nodes-5-2-report.html</argument>
                    <argument>-x</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
