{
	"id": "50bfb324-7b0c-9441-e24e-3e26c3863a28",
	"name": "Tests - Load Data",
	"description": "",
	"order": [
		"4510e0cb-b31f-9516-b5a4-a4ea08fe1c39",
		"30ce5fed-ab2c-bf98-a881-5df02441eaf9",
		"bf58b64a-74f4-3385-f438-acb1298f238a",
		"88a2162e-6a28-4f6c-98ba-ff259715e5e0",
		"0f5f0c29-5074-b58c-8e18-71490d602437",
		"511efd4a-9a87-5e80-148a-5475507a019f"
	],
	"folders": [],
	"owner": "371756",
	"hasRequests": true,
	"requests": [
		{
			"id": "0f5f0c29-5074-b58c-8e18-71490d602437",
			"name": "Create test user 1",
			"description": "",
			"collectionId": "50bfb324-7b0c-9441-e24e-3e26c3863a28",
			"method": "POST",
			"headers": "Authorization: {{adminAuth}}\nContent-Type: application/json",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\n    \"userName\":\"testUser1\",\n    \"password\":\"testUser1\",\n    \"firstName\":\"Test\",\n    \"lastName\":\"User1\",\n    \"email\":\"test1@alfresco.com\",\n    \"disableAccount\":false,\n    \"quota\":-1,\n    \"groups\":[]\n}",
			"tests": "tests[request.name] = responseCode.code === 200;",
			"preRequestScript": "",
			"url": "{{v0Url}}/api/people",
			"responses": []
		},
		{
			"id": "30ce5fed-ab2c-bf98-a881-5df02441eaf9",
			"name": "Fetch json schema",
			"description": "",
			"collectionId": "50bfb324-7b0c-9441-e24e-3e26c3863a28",
			"method": "GET",
			"headers": "",
			"dataMode": "params",
			"data": [],
			"rawModeData": "",
			"tests": "// Small workaround that swagger not support any type\nvar schema = JSON.parse(responseBody);\n// Temporarily removed cause that are bugs which needs to be fixed\ndelete schema.definitions.Rating.properties['myRating'];\ndelete schema.definitions.Rating.properties['aggregate'];\ndelete schema.definitions.Activity.properties['activityType'];\ndelete schema.definitions.SiteMembershipRequest.properties['entry'];\nschema.definitions.SiteMembershipRequest.required.splice(1,1);\ndelete schema.definitions.SiteEntry.properties['entry'];\nschema.definitions.SiteEntry.required.splice(2,1);\ndelete schema.definitions.Person.properties['lastName'];\nschema.definitions.Person.required.splice(4,1);\ndelete schema.definitions.Preference.properties['value'];\nschema.definitions.Preference.required.splice(1,1);\n//delete schema.definitions.Error.properties.error.properties['briefSummary'];\n//schema.definitions.Error.properties.error.required.splice(0,1);\n\n\npostman.setGlobalVariable('alfresco-schema', JSON.stringify(schema));",
			"preRequestScript": "",
			"url": "https://api-explorer.alfresco.com/api-explorer/definitions/alfresco-core.json",
			"responses": []
		},
		{
			"id": "4510e0cb-b31f-9516-b5a4-a4ea08fe1c39",
			"headers": "",
			"url": "http://bigstickcarpet.com/postman-bdd/dist/postman-bdd.js",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"tests": "/**\n * - Store Postman BDD functions in helperFunctions\n * \n **/\n\nfunction expectedReturn(status, entryName) {\n    it('expect to return ' + status, function() {\n        expect(response).to.have.status(status);\n        if(entryName != undefined)\n          expect(response.body).to.not.be.empty;\n    });\n}\n\nfunction expectedHeader(entryName) {\n    describe('header', function() {\n        /*\n        it('expect to have content type', function(){\n            expect(response).to.have.header('Content-Type');\n        });\n        if(entryName != undefined)\n          it('expect to have content length', function(){\n              expect(response).to.have.header('Content-Length');\n          });*/\n    });\n}\n\nfunction expectedSchema(entryName, body) {\n  var schema = JSON.parse(globals[\"alfresco-schema\"]);\n  tv4.addSchema('http://alfresco.com/schema', schema);\n  var fragment = '#/definitions/' + entryName;\n  var subschema = tv4.getSchema('http://alfresco.com/schema' + fragment);\n  \n  it('expect to have schema ' + fragment, function() {\n    expect(body).to.have.schema(subschema);\n  });\n}\n\nfunction expectedRequestBody(entry) {\n    if(entry != undefined)\n        describe('RequestBody', function() {\n            expectedSchema(entry, request.body);\n    });\n}\n\nfunction expectedResponseBody(entry, otherResponseBodyChecks) {\n    if(entry != undefined)\n        describe('ResponseBody', function() {\n            expectedSchema(entry, response.body);\n            if(otherResponseBodyChecks !== undefined)\n                otherResponseBodyChecks();\n    });\n}\n\nfunction describeResponse(status, entryNameResponse, otherResponseBodyChecks,  entryNameRequest){\n    if(globals['debugModeOn'] === 'true' || globals['debugModeOn'] === undefined)\n        describe('\"' + request.name + '\"', function(){\n            expectedReturn(status, entryNameResponse);\n            expectedHeader(entryNameResponse);\n            expectedRequestBody(entryNameRequest);\n            expectedResponseBody(entryNameResponse, otherResponseBodyChecks);\n        });\n}\n\npostman.setGlobalVariable('helperFunctions', describeResponse.toString() + expectedReturn.toString() + expectedHeader.toString() + expectedRequestBody.toString() + expectedResponseBody.toString() + expectedSchema.toString() + responseBody);",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1468236521250,
			"name": "helperFunctions",
			"description": "",
			"collectionId": "50bfb324-7b0c-9441-e24e-3e26c3863a28",
			"responses": [],
			"rawModeData": "",
			"descriptionFormat": null,
			"folder": null
		},
		{
			"id": "511efd4a-9a87-5e80-148a-5475507a019f",
			"name": "Create test user 2",
			"description": "",
			"collectionId": "50bfb324-7b0c-9441-e24e-3e26c3863a28",
			"method": "POST",
			"headers": "Authorization: {{adminAuth}}\nContent-Type: application/json",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\n    \"userName\":\"testUser2\",\n    \"password\":\"testUser2\",\n    \"firstName\":\"Test\",\n    \"lastName\":\"User2\",\n    \"email\":\"test2@alfresco.com\",\n    \"disableAccount\":false,\n    \"quota\":-1,\n    \"groups\":[]\n}",
			"tests": "tests[request.name] = responseCode.code === 200;",
			"preRequestScript": "",
			"url": "{{v0Url}}/api/people",
			"responses": []
		},
		{
			"id": "88a2162e-6a28-4f6c-98ba-ff259715e5e0",
			"name": "Fetch Alfresco version",
			"description": "",
			"collectionId": "50bfb324-7b0c-9441-e24e-3e26c3863a28",
			"method": "GET",
			"headers": "",
			"dataMode": "params",
			"data": [],
			"rawModeData": "",
			"tests": "tests[request.name] = responseCode.code === 200;\nvar alfrescoVersionString = JSON.parse(responseBody).data.version;\nvar alfrescoVersionArr = alfrescoVersionString.split(\" \");\nvar alfrescoNumberArr = alfrescoVersionArr[0].split(\".\");\n\n// Stores the alfresco major version number e.g. 5.1.0 -> 5\npostman.setGlobalVariable('majorVersion', alfrescoNumberArr[0]);\n\n// Stores the alfresco minor version number e.g. 5.1.0 -> 1\npostman.setGlobalVariable('minorVersion', alfrescoNumberArr[1]);\n\n// Stores the alfresco maintance version number e.g. 5.1.0 -> 0\npostman.setGlobalVariable('maintanceVersion', alfrescoNumberArr[2]);\n\npostman.setGlobalVariable('alfrescoRevision', alfrescoVersionArr[1]);\n\ntests['Alfresco version = ' + alfrescoVersionString + ' stored as: ' + globals['majorVersion'] + '.' + globals['minorVersion'] + '.' + globals['maintanceVersion'] + ' ' + globals['alfrescoRevision']] = true",
			"preRequestScript": "",
			"url": "http://localhost:8080/alfresco/service/api/server",
			"responses": []
		},
		{
			"id": "bf58b64a-74f4-3385-f438-acb1298f238a",
			"name": "Fetch json schema from BCK",
			"description": "",
			"collectionId": "50bfb324-7b0c-9441-e24e-3e26c3863a28",
			"method": "GET",
			"headers": "",
			"dataMode": "params",
			"data": [],
			"rawModeData": "",
			"tests": "// Small workaround that swagger not support any type\nvar schema = JSON.parse(responseBody);\n// Temporarily removed cause that are bugs which needs to be fixed\ndelete schema.definitions.Rating.properties['myRating']; // multiple values\ndelete schema.definitions.Rating.properties['aggregate']; // multiple values\ndelete schema.definitions.Preference.properties['value']; // multiple values\n\n\npostman.setGlobalVariable('alfresco-schema', JSON.stringify(schema));",
			"preRequestScript": "",
			"url": "https://raw.githubusercontent.com/Alfresco/rest-api-bck/master/src/test/resources/alfresco-core.json?token=ARiq8je9QZLvSflqRN9cafS9MXTPsMRSks5XhO8rwA%3D%3D",
			"responses": []
		}
	]
}