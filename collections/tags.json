{
	"id": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
	"name": "Tests - Tags",
	"description": "Tests for the Tags REST API",
	"order": [],
	"folders": [
		{
			"id": "ff171584-9ce6-54bf-cf3c-8b188d5391ee",
			"name": "1 POST /nodes/{nodeId}/tags",
			"description": "",
			"order": [
				"01142b2e-2210-0ec1-264d-87253a6f9ae0",
				"a843c447-eecc-99a7-f174-a21dd8e37023",
				"329f7fd8-0cbd-4a62-c59d-ebec1dc5e98e",
				"9ba26256-efc5-ffb3-12e0-a299b8effd6d",
				"629aae6c-9588-a06c-9f8b-bbdc0c6c1217",
				"ba24d6f1-74c3-b8ec-1d87-cce2dd3b69b7",
				"a4e45449-5abb-358a-d642-2b16c26677ae",
				"0690517f-c060-ffab-d266-922a83eeec7a",
				"aa4131fe-1dfb-919b-fad9-474cafab5117",
				"cc2e5304-fbe4-aace-fdd0-1e5dbfcaad26",
				"72f03689-047d-2ab7-65de-8524297e6cc5",
				"c05fc86c-db54-6d3b-4db1-e61b56f9b44c",
				"4cedefca-59f5-e73e-6963-9a284a2e9e2d",
				"c300fdff-1337-9183-5d93-8f324d3a3251",
				"a4aa769a-3f79-7c9f-17c8-0a390109eaae"
			],
			"owner": "371756",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823"
		},
		{
			"id": "ef25080b-b885-a95c-204b-90d2af1e9abb",
			"name": "2 GET /nodes/{nodeId}/tags",
			"description": "",
			"order": [
				"341258ea-3edf-1648-543c-9fe9834ad1ca",
				"6b0c87b8-be83-d3a0-e329-0bd6d87376ab",
				"a42c9f3c-00f2-bfcb-eb7c-4c0bef83d135",
				"24038e60-7728-4a5b-f5e2-8790e3854671",
				"8b85725b-2b7c-b6be-859a-b672b5bdf767",
				"59beaf28-4be0-0a70-3100-10df474db5ba",
				"84ea5243-cf5b-11bb-f966-12b485f5926b",
				"7e44fcd7-911e-d473-e356-6d66245fb8eb",
				"144728c8-3b84-b5f0-dd7f-189f4b426922"
			],
			"owner": "371756",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823"
		},
		{
			"id": "ce87d293-e5fb-adc8-9b35-5e958cb92783",
			"name": "3 GET /tags",
			"description": "",
			"order": [
				"6926a5b5-ceb3-f080-8fdd-81206354c99e",
				"50d4db60-997c-17a2-9dd6-5c749d4444a7",
				"cce602ac-6647-5d3e-20c7-99290ea2bfbf",
				"a2186b10-8d78-b704-e2a3-2663cee44887",
				"b929d89b-a78a-f4e3-79a1-8c8d140c0bd3",
				"5895ffa0-af1e-b937-cfcf-17e662002293",
				"bd5a19d1-71e6-dbee-b399-3e3f2a7bf3fa"
			],
			"owner": "371756",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"requests": [
				{
					"id": "185221da-2e5d-6346-d8d5-84d58d2d1be1",
					"headers": "Authorization: {{authorization}}\n",
					"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/comments",
					"preRequestScript": null,
					"pathVariables": {},
					"method": "GET",
					"data": null,
					"dataMode": "params",
					"version": 2,
					"tests": "// Load Postman BDD ... use http://chaijs.com/ for expressions\neval(postman.getGlobalVariable('postmanBDD'));\n\n// Load Alfresco schema\nvar schema = JSON.parse(postman.getGlobalVariable('alfresco-schema'));\ntv4.addSchema('http://alfresco.com/schema', schema);\nvar fragment = '#/definitions/CommentPaging';\nvar subschema = tv4.getSchema('http://alfresco.com/schema' + fragment);\n\ndescribe('\"Positive: Retrieve comments from node\"', function() {\n    it('expect to return comments', function() {\n        expect(response).to.have.status(200);\n        expect(response).to.be.json;\n        expect(response.body).to.not.be.empty;\n    });\n    \n    describe('header', function() {\n        it('expect to have content type', function(){\n            expect(response).to.have.header('Content-Type');\n        });\n    });\n    \n    describe('body', function() {\n        it('expect to have schema ' + fragment, function() {\n            expect(response.body).to.have.schema(subschema);\n        });\n        \n        describe('positive values check:', function() {\n            it('test 1', function() {\n                expect(response.body.list.entries).to.have.length.above(0,'entries length');\n            });\n        });\n    });\n});\n\npostman.setGlobalVariable('retrievedComments',JSON.stringify(response.body));",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1458558561220,
					"name": "Positive: Retrieve comments from node",
					"description": "",
					"collectionId": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"responses": [],
					"owner": "371756",
					"write": true,
					"collection": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"folder": "d138554f-7b81-6ee6-acce-b306c01ef224",
					"synced": true,
					"isDeleted": true
				},
				{
					"id": "a78560d1-ede4-aa9a-ab9e-20d3fbe1c9b5",
					"headers": "Authorization: {{authorization}}\n",
					"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/comments?skipCount=0&maxItems=2",
					"preRequestScript": null,
					"pathVariables": {},
					"method": "GET",
					"data": null,
					"dataMode": "params",
					"version": 2,
					"tests": "// Load Postman BDD ... use http://chaijs.com/ for expressions\neval(postman.getGlobalVariable('postmanBDD'));\n\n// Load Alfresco schema\nvar schema = JSON.parse(postman.getGlobalVariable('alfresco-schema'));\ntv4.addSchema('http://alfresco.com/schema', schema);\nvar fragment = '#/definitions/CommentPaging';\nvar subschema = tv4.getSchema('http://alfresco.com/schema' + fragment);\n\ndescribe('\"Positive: Retrieve comments from node\"', function() {\n    it('expect to return comments', function() {\n        expect(response).to.have.status(200);\n        expect(response).to.be.json;\n        expect(response.body).to.not.be.empty;\n    });\n    \n    describe('header', function() {\n        it('expect to have content type', function(){\n            expect(response).to.have.header('Content-Type');\n        });\n    });\n    \n    describe('body', function() {\n        it('expect to have schema ' + fragment, function() {\n            expect(response.body).to.have.schema(subschema);\n        });\n        \n        it('expect list.entries to have lengthOf 2', function() {\n            expect(response.body.list.entries,'entries length').to.have.lengthOf(2);\n        });\n    });\n});\n",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1458212139244,
					"name": "Positive: Retrieve 2 comments from node",
					"description": "",
					"collectionId": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"responses": [],
					"synced": true,
					"owner": "371756",
					"write": true,
					"collection": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"folder": "d138554f-7b81-6ee6-acce-b306c01ef224",
					"isDeleted": true
				},
				{
					"id": "6f1196cc-b236-80b0-9ca7-1d29e8b710a7",
					"headers": "Authorization: {{authorization}}\n",
					"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/comments?skipCount=0&maxItems=2",
					"preRequestScript": null,
					"pathVariables": {},
					"method": "GET",
					"data": null,
					"dataMode": "params",
					"version": 2,
					"tests": "// Load Postman BDD ... use http://chaijs.com/ for expressions\neval(postman.getGlobalVariable('postmanBDD'));\n\n// Load Alfresco schema\nvar schema = JSON.parse(postman.getGlobalVariable('alfresco-schema'));\ntv4.addSchema('http://alfresco.com/schema', schema);\nvar fragment = '#/definitions/CommentPaging';\nvar subschema = tv4.getSchema('http://alfresco.com/schema' + fragment);\n\ndescribe('\"Positive: Retrieve only last 2 comments\"', function() {\n    it('expect to return comments', function() {\n        expect(response).to.have.status(200);\n        expect(response).to.be.json;\n        expect(response.body).to.not.be.empty;\n    });\n    \n    describe('header', function() {\n        it('expect to have content type', function(){\n            expect(response).to.have.header('Content-Type');\n        });\n    });\n    \n    describe('body', function() {\n        it('expect to have schema ' + fragment, function() {\n            expect(response.body).to.have.schema(subschema);\n        });\n        \n        it('expect list.entries to have lengthOf 2', function() {\n            expect(response.body.list.entries,'entries length').to.have.lengthOf(2);\n        });\n        \n        // compare with loaded comments before\n        var comments = JSON.parse(postman.getGlobalVariable('retrievedComments'));\n        comments = comments.list.entries.slice(0, 2);\n        it('expect list.entries[0-1] to equal comments.list.entries[0-1]', function() {\n            result = expect(response.body.list.entries.slice(0, 2),'comments 1-2').to.deep.equal(comments);\n        });\n        \n    });\n});\n",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1458558592732,
					"name": "Positive: Retrieve only last 2 comments",
					"description": "",
					"collectionId": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"responses": [],
					"owner": "371756",
					"write": true,
					"collection": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"folder": "d138554f-7b81-6ee6-acce-b306c01ef224",
					"synced": true,
					"isDeleted": true
				},
				{
					"id": "11c85885-6c0a-40a6-490d-035f80eba7e7",
					"headers": "Authorization: {{authorization}}\n",
					"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/comments?skipCount=2",
					"preRequestScript": null,
					"pathVariables": {},
					"method": "GET",
					"data": null,
					"dataMode": "params",
					"version": 2,
					"tests": "// Load Postman BDD ... use http://chaijs.com/ for expressions\neval(postman.getGlobalVariable('postmanBDD'));\n\n// Load Alfresco schema\nvar schema = JSON.parse(postman.getGlobalVariable('alfresco-schema'));\ntv4.addSchema('http://alfresco.com/schema', schema);\nvar fragment = '#/definitions/CommentPaging';\nvar subschema = tv4.getSchema('http://alfresco.com/schema' + fragment);\n\ndescribe('\"Positive: Retrieve comments but skip the first 2\"', function() {\n    it('expect to return comments', function() {\n        expect(response).to.have.status(200);\n        expect(response).to.be.json;\n        expect(response.body).to.not.be.empty;\n    });\n    \n    describe('header', function() {\n        it('expect to have content type', function(){\n            expect(response).to.have.header('Content-Type');\n        });\n    });\n    \n    describe('body', function() {\n        it('expect to have schema ' + fragment, function() {\n            expect(response.body).to.have.schema(subschema);\n        });\n        \n        // compare with loaded comments before\n        var comments = JSON.parse(postman.getGlobalVariable('retrievedComments'));\n        comments = comments.list.entries.slice(2);\n        it('expect list.entries to equal comments.list.entries[3:]', function() {\n            result = expect(response.body.list.entries,'comments').to.deep.equal(comments);\n        });\n        \n    });\n});\n",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1458560058059,
					"name": "Positive: Retrieve comments but skip the first 2",
					"description": "",
					"collectionId": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"responses": [],
					"owner": "371756",
					"write": true,
					"collection": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"folder": "d138554f-7b81-6ee6-acce-b306c01ef224",
					"synced": true,
					"isDeleted": true
				},
				{
					"id": "72b90faf-b6c2-97ac-662f-ebec0384dba0",
					"headers": "Authorization: {{authorization}}\n",
					"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}};3.0/comments",
					"preRequestScript": null,
					"pathVariables": {},
					"method": "GET",
					"data": null,
					"dataMode": "params",
					"version": 2,
					"tests": "// Load Postman BDD ... use http://chaijs.com/ for expressions\neval(postman.getGlobalVariable('postmanBDD'));\n\n// Load Alfresco schema\nvar schema = JSON.parse(postman.getGlobalVariable('alfresco-schema'));\ntv4.addSchema('http://alfresco.com/schema', schema);\nvar fragment = '#/definitions/CommentPaging';\nvar subschema = tv4.getSchema('http://alfresco.com/schema' + fragment);\n\ndescribe('\"Positive: Retrieve comments with version number\"', function() {\n    it('expect to return comments', function() {\n        expect(response).to.have.status(200);\n        expect(response).to.be.json;\n        expect(response.body).to.not.be.empty;\n    });\n    \n    describe('header', function() {\n        it('expect to have content type', function(){\n            expect(response).to.have.header('Content-Type');\n        });\n    });\n    \n    describe('body', function() {\n        it('expect to have schema ' + fragment, function() {\n            expect(response.body).to.have.schema(subschema);\n        });\n        \n        describe('positive values check:', function() {\n            it('test 1', function() {\n                expect(response.body.list.entries).to.have.length.above(0,'entries length');\n            });\n        });\n    });\n});\n",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1458560063399,
					"name": "Positive: Retrieve comments with version number",
					"description": "",
					"collectionId": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"responses": [],
					"owner": "371756",
					"write": true,
					"collection": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"folder": "d138554f-7b81-6ee6-acce-b306c01ef224",
					"synced": true,
					"isDeleted": true
				},
				{
					"id": "1fb7e70e-24bd-b6c7-fd9d-19be496a8ea1",
					"headers": "Authorization: {{authorization}}\n",
					"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/invalid/comments",
					"preRequestScript": null,
					"pathVariables": {},
					"method": "GET",
					"data": null,
					"dataMode": "params",
					"version": 2,
					"tests": "// Load Postman BDD ... use http://chaijs.com/ for expressions\neval(postman.getGlobalVariable('postmanBDD'));\n\n// Load Alfresco schema\nvar schema = JSON.parse(postman.getGlobalVariable('alfresco-schema'));\ntv4.addSchema('http://alfresco.com/schema', schema);\nvar fragment = '#/definitions/Error';\nvar subschema = tv4.getSchema('http://alfresco.com/schema' + fragment);\n\ndescribe('\"Negative: Retrieve comments from invalid node\"', function() {\n    it('expect to return an error', function() {\n        expect(response).to.have.status(404);\n        expect(response).to.be.json;\n        expect(response.body).to.not.be.empty;\n    });\n    \n    describe('header', function() {\n        it('expect to have content type', function(){\n            expect(response).to.have.header('Content-Type');\n        });\n        it('expect to have content length', function(){\n            expect(response).to.have.header('Content-Length');\n        });\n    });\n    \n    describe('body', function() {\n        it('expect to have schema ' + fragment, function() {\n            expect(response.body).to.have.schema(subschema);\n        });\n    });\n});\n",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1458212335202,
					"name": "Negative: Retrieve comments from invalid node",
					"description": "",
					"collectionId": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"responses": [],
					"synced": true,
					"owner": "371756",
					"write": true,
					"collection": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"folder": "d138554f-7b81-6ee6-acce-b306c01ef224"
				},
				{
					"id": "63601a7d-ab0d-14df-20e1-ac6ca77394d9",
					"headers": "Authorization: {{authorization}}\n",
					"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}};pwc/comments",
					"preRequestScript": null,
					"pathVariables": {},
					"method": "GET",
					"data": null,
					"dataMode": "params",
					"version": 2,
					"tests": "// Load Postman BDD ... use http://chaijs.com/ for expressions\neval(postman.getGlobalVariable('postmanBDD'));\n\n// Load Alfresco schema\nvar schema = JSON.parse(postman.getGlobalVariable('alfresco-schema'));\ntv4.addSchema('http://alfresco.com/schema', schema);\nvar fragment = '#/definitions/Error';\nvar subschema = tv4.getSchema('http://alfresco.com/schema' + fragment);\n\ndescribe('\"Negative: Retrieve comments from invalid node\"', function() {\n    it('expect to return an error', function() {\n        expect(response).to.have.status(404);\n        expect(response).to.be.json;\n        expect(response.body).to.not.be.empty;\n    });\n    \n    describe('header', function() {\n        it('expect to have content type', function(){\n            expect(response).to.have.header('Content-Type');\n        });\n        it('expect to have content length', function(){\n            expect(response).to.have.header('Content-Length');\n        });\n    });\n    \n    describe('body', function() {\n        it('expect to have schema ' + fragment, function() {\n            expect(response.body).to.have.schema(subschema);\n        });\n    });\n});\n",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1458212347172,
					"name": "Negative: Retrieve comments from invalid node 2",
					"description": "",
					"collectionId": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"responses": [],
					"synced": true,
					"owner": "371756",
					"write": true,
					"collection": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"folder": "d138554f-7b81-6ee6-acce-b306c01ef224",
					"isDeleted": true
				},
				{
					"id": "794fe2e5-3dc5-a712-c6ba-6de239c8a22b",
					"headers": "Authorization: {{authorization}}\n",
					"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{notJoinedSiteNodeId}}/comments",
					"preRequestScript": null,
					"pathVariables": {},
					"method": "GET",
					"data": null,
					"dataMode": "params",
					"version": 2,
					"tests": "// Load Postman BDD ... use http://chaijs.com/ for expressions\neval(postman.getGlobalVariable('postmanBDD'));\n\n// Load Alfresco schema\nvar schema = JSON.parse(postman.getGlobalVariable('alfresco-schema'));\ntv4.addSchema('http://alfresco.com/schema', schema);\nvar fragment = '#/definitions/Error';\nvar subschema = tv4.getSchema('http://alfresco.com/schema' + fragment);\n\ndescribe('\"Negative: Retrieve comments from a not joined site\"', function() {\n    it('expect to return an error', function() {\n        expect(response).to.have.status(403);\n        expect(response).to.be.json;\n        expect(response.body).to.not.be.empty;\n    });\n    \n    describe('header', function() {\n        it('expect to have content type', function(){\n            expect(response).to.have.header('Content-Type');\n        });\n        it('expect to have content length', function(){\n            expect(response).to.have.header('Content-Length');\n        });\n    });\n    \n    describe('body', function() {\n        it('expect to have schema ' + fragment, function() {\n            expect(response.body).to.have.schema(subschema);\n        });\n    });\n});\n",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1458215615025,
					"name": "Negative: Retrieve comments from a not joined site",
					"description": "",
					"collectionId": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"responses": [],
					"synced": true,
					"owner": "371756",
					"write": true,
					"collection": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"folder": "d138554f-7b81-6ee6-acce-b306c01ef224",
					"isDeleted": true
				}
			]
		},
		{
			"id": "f301bb4c-8582-1d63-d745-65bb1393b727",
			"name": "4 PUT /tags/{tagId}",
			"description": "",
			"order": [
				"f772800b-4acd-5550-9cf4-4050ad8e78b5",
				"da0d4d6d-4ed3-a5f7-efd1-5f768aae4507",
				"81986ec6-e0bb-d0d3-aa7d-a92914855db0",
				"d5247376-1b57-a926-19d9-9fc7189ef3d9"
			],
			"owner": "371756",
			"collectionId": "079c0b16-c98c-e534-ebca-cbda748a0761",
			"timestamp": null
		},
		{
			"id": "622435db-211a-63fd-2dd1-f1509cfa11cf",
			"name": "5 GET /tags/{tagId}",
			"description": "",
			"order": [
				"c0fbc0b9-9a95-5f0b-0341-4614957d7cfd",
				"6745576c-34d1-efdb-00a1-8d2b6aa65e2a"
			],
			"owner": "371756",
			"collectionId": "079c0b16-c98c-e534-ebca-cbda748a0761",
			"requests": [
				{
					"id": "c8af3591-e184-0d74-bde3-ad3d52730f13",
					"headers": "Authorization: {{authorization}}\n",
					"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/comments",
					"preRequestScript": null,
					"pathVariables": {},
					"method": "GET",
					"data": null,
					"dataMode": "params",
					"version": 2,
					"tests": "// Load Postman BDD ... use http://chaijs.com/ for expressions\neval(postman.getGlobalVariable('postmanBDD'));\n\n// Load Alfresco schema\nvar schema = JSON.parse(postman.getGlobalVariable('alfresco-schema'));\ntv4.addSchema('http://alfresco.com/schema', schema);\nvar fragment = '#/definitions/CommentPaging';\nvar subschema = tv4.getSchema('http://alfresco.com/schema' + fragment);\n\ndescribe('\"Positive: Retrieve comments from node\"', function() {\n    it('expect to return comments', function() {\n        expect(response).to.have.status(200);\n        expect(response).to.be.json;\n        expect(response.body).to.not.be.empty;\n    });\n    \n    describe('header', function() {\n        it('expect to have content type', function(){\n            expect(response).to.have.header('Content-Type');\n        });\n    });\n    \n    describe('body', function() {\n        it('expect to have schema ' + fragment, function() {\n            expect(response.body).to.have.schema(subschema);\n        });\n        \n        describe('positive values check:', function() {\n            it('test 1', function() {\n                expect(response.body.list.entries).to.have.length.above(0,'entries length');\n            });\n        });\n    });\n});\n\npostman.setGlobalVariable('retrievedComments',JSON.stringify(response.body));",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1458558561220,
					"name": "Positive: Retrieve comments from node",
					"description": "",
					"collectionId": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"responses": [],
					"owner": "371756",
					"write": true,
					"collection": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"folder": "9f033b24-6d37-07e7-ad4e-cdb0b14d75ac",
					"synced": true
				},
				{
					"id": "c2d91363-9c25-3b3b-c04f-4c3da51e3bdd",
					"headers": "Authorization: {{authorization}}\n",
					"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/comments?skipCount=0&maxItems=2",
					"preRequestScript": null,
					"pathVariables": {},
					"method": "GET",
					"data": null,
					"dataMode": "params",
					"version": 2,
					"tests": "// Load Postman BDD ... use http://chaijs.com/ for expressions\neval(postman.getGlobalVariable('postmanBDD'));\n\n// Load Alfresco schema\nvar schema = JSON.parse(postman.getGlobalVariable('alfresco-schema'));\ntv4.addSchema('http://alfresco.com/schema', schema);\nvar fragment = '#/definitions/CommentPaging';\nvar subschema = tv4.getSchema('http://alfresco.com/schema' + fragment);\n\ndescribe('\"Positive: Retrieve comments from node\"', function() {\n    it('expect to return comments', function() {\n        expect(response).to.have.status(200);\n        expect(response).to.be.json;\n        expect(response.body).to.not.be.empty;\n    });\n    \n    describe('header', function() {\n        it('expect to have content type', function(){\n            expect(response).to.have.header('Content-Type');\n        });\n    });\n    \n    describe('body', function() {\n        it('expect to have schema ' + fragment, function() {\n            expect(response.body).to.have.schema(subschema);\n        });\n        \n        it('expect list.entries to have lengthOf 2', function() {\n            expect(response.body.list.entries,'entries length').to.have.lengthOf(2);\n        });\n    });\n});\n",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1458212139244,
					"name": "Positive: Retrieve 2 comments from node",
					"description": "",
					"collectionId": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"responses": [],
					"synced": true,
					"owner": "371756",
					"write": true,
					"collection": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"folder": "9f033b24-6d37-07e7-ad4e-cdb0b14d75ac",
					"isDeleted": true
				},
				{
					"id": "54636502-0a13-a1f4-519d-2c04182c7704",
					"headers": "Authorization: {{authorization}}\n",
					"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/comments?skipCount=0&maxItems=2",
					"preRequestScript": null,
					"pathVariables": {},
					"method": "GET",
					"data": null,
					"dataMode": "params",
					"version": 2,
					"tests": "// Load Postman BDD ... use http://chaijs.com/ for expressions\neval(postman.getGlobalVariable('postmanBDD'));\n\n// Load Alfresco schema\nvar schema = JSON.parse(postman.getGlobalVariable('alfresco-schema'));\ntv4.addSchema('http://alfresco.com/schema', schema);\nvar fragment = '#/definitions/CommentPaging';\nvar subschema = tv4.getSchema('http://alfresco.com/schema' + fragment);\n\ndescribe('\"Positive: Retrieve only last 2 comments\"', function() {\n    it('expect to return comments', function() {\n        expect(response).to.have.status(200);\n        expect(response).to.be.json;\n        expect(response.body).to.not.be.empty;\n    });\n    \n    describe('header', function() {\n        it('expect to have content type', function(){\n            expect(response).to.have.header('Content-Type');\n        });\n    });\n    \n    describe('body', function() {\n        it('expect to have schema ' + fragment, function() {\n            expect(response.body).to.have.schema(subschema);\n        });\n        \n        it('expect list.entries to have lengthOf 2', function() {\n            expect(response.body.list.entries,'entries length').to.have.lengthOf(2);\n        });\n        \n        // compare with loaded comments before\n        var comments = JSON.parse(postman.getGlobalVariable('retrievedComments'));\n        comments = comments.list.entries.slice(0, 2);\n        it('expect list.entries[0-1] to equal comments.list.entries[0-1]', function() {\n            result = expect(response.body.list.entries.slice(0, 2),'comments 1-2').to.deep.equal(comments);\n        });\n        \n    });\n});\n",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1458558592732,
					"name": "Positive: Retrieve only last 2 comments",
					"description": "",
					"collectionId": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"responses": [],
					"owner": "371756",
					"write": true,
					"collection": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"folder": "9f033b24-6d37-07e7-ad4e-cdb0b14d75ac",
					"synced": true,
					"isDeleted": true
				},
				{
					"id": "425e5922-aade-37e9-eb20-d721b6dd3c25",
					"headers": "Authorization: {{authorization}}\n",
					"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/comments?skipCount=2",
					"preRequestScript": null,
					"pathVariables": {},
					"method": "GET",
					"data": null,
					"dataMode": "params",
					"version": 2,
					"tests": "// Load Postman BDD ... use http://chaijs.com/ for expressions\neval(postman.getGlobalVariable('postmanBDD'));\n\n// Load Alfresco schema\nvar schema = JSON.parse(postman.getGlobalVariable('alfresco-schema'));\ntv4.addSchema('http://alfresco.com/schema', schema);\nvar fragment = '#/definitions/CommentPaging';\nvar subschema = tv4.getSchema('http://alfresco.com/schema' + fragment);\n\ndescribe('\"Positive: Retrieve comments but skip the first 2\"', function() {\n    it('expect to return comments', function() {\n        expect(response).to.have.status(200);\n        expect(response).to.be.json;\n        expect(response.body).to.not.be.empty;\n    });\n    \n    describe('header', function() {\n        it('expect to have content type', function(){\n            expect(response).to.have.header('Content-Type');\n        });\n    });\n    \n    describe('body', function() {\n        it('expect to have schema ' + fragment, function() {\n            expect(response.body).to.have.schema(subschema);\n        });\n        \n        // compare with loaded comments before\n        var comments = JSON.parse(postman.getGlobalVariable('retrievedComments'));\n        comments = comments.list.entries.slice(2);\n        it('expect list.entries to equal comments.list.entries[3:]', function() {\n            result = expect(response.body.list.entries,'comments').to.deep.equal(comments);\n        });\n        \n    });\n});\n",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1458560058059,
					"name": "Positive: Retrieve comments but skip the first 2",
					"description": "",
					"collectionId": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"responses": [],
					"owner": "371756",
					"write": true,
					"collection": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"folder": "9f033b24-6d37-07e7-ad4e-cdb0b14d75ac",
					"synced": true,
					"isDeleted": true
				},
				{
					"id": "2835d552-204b-9cea-716e-fc6ff0e6ac46",
					"headers": "Authorization: {{authorization}}\n",
					"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}};3.0/comments",
					"preRequestScript": null,
					"pathVariables": {},
					"method": "GET",
					"data": null,
					"dataMode": "params",
					"version": 2,
					"tests": "// Load Postman BDD ... use http://chaijs.com/ for expressions\neval(postman.getGlobalVariable('postmanBDD'));\n\n// Load Alfresco schema\nvar schema = JSON.parse(postman.getGlobalVariable('alfresco-schema'));\ntv4.addSchema('http://alfresco.com/schema', schema);\nvar fragment = '#/definitions/CommentPaging';\nvar subschema = tv4.getSchema('http://alfresco.com/schema' + fragment);\n\ndescribe('\"Positive: Retrieve comments with version number\"', function() {\n    it('expect to return comments', function() {\n        expect(response).to.have.status(200);\n        expect(response).to.be.json;\n        expect(response.body).to.not.be.empty;\n    });\n    \n    describe('header', function() {\n        it('expect to have content type', function(){\n            expect(response).to.have.header('Content-Type');\n        });\n    });\n    \n    describe('body', function() {\n        it('expect to have schema ' + fragment, function() {\n            expect(response.body).to.have.schema(subschema);\n        });\n        \n        describe('positive values check:', function() {\n            it('test 1', function() {\n                expect(response.body.list.entries).to.have.length.above(0,'entries length');\n            });\n        });\n    });\n});\n",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1458560063399,
					"name": "Positive: Retrieve comments with version number",
					"description": "",
					"collectionId": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"responses": [],
					"owner": "371756",
					"write": true,
					"collection": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"folder": "9f033b24-6d37-07e7-ad4e-cdb0b14d75ac",
					"synced": true,
					"isDeleted": true
				},
				{
					"id": "6c5a5a11-771d-353d-aefb-e07f60b54989",
					"headers": "Authorization: {{authorization}}\n",
					"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/invalid/comments",
					"preRequestScript": null,
					"pathVariables": {},
					"method": "GET",
					"data": null,
					"dataMode": "params",
					"version": 2,
					"tests": "// Load Postman BDD ... use http://chaijs.com/ for expressions\neval(postman.getGlobalVariable('postmanBDD'));\n\n// Load Alfresco schema\nvar schema = JSON.parse(postman.getGlobalVariable('alfresco-schema'));\ntv4.addSchema('http://alfresco.com/schema', schema);\nvar fragment = '#/definitions/Error';\nvar subschema = tv4.getSchema('http://alfresco.com/schema' + fragment);\n\ndescribe('\"Negative: Retrieve comments from invalid node\"', function() {\n    it('expect to return an error', function() {\n        expect(response).to.have.status(404);\n        expect(response).to.be.json;\n        expect(response.body).to.not.be.empty;\n    });\n    \n    describe('header', function() {\n        it('expect to have content type', function(){\n            expect(response).to.have.header('Content-Type');\n        });\n        it('expect to have content length', function(){\n            expect(response).to.have.header('Content-Length');\n        });\n    });\n    \n    describe('body', function() {\n        it('expect to have schema ' + fragment, function() {\n            expect(response.body).to.have.schema(subschema);\n        });\n    });\n});\n",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1458212335202,
					"name": "Negative: Retrieve comments from invalid node",
					"description": "",
					"collectionId": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"responses": [],
					"synced": true,
					"owner": "371756",
					"write": true,
					"collection": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"folder": "9f033b24-6d37-07e7-ad4e-cdb0b14d75ac"
				},
				{
					"id": "2979fc39-01e6-fa38-d495-5adc6d0408b7",
					"headers": "Authorization: {{authorization}}\n",
					"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}};pwc/comments",
					"preRequestScript": null,
					"pathVariables": {},
					"method": "GET",
					"data": null,
					"dataMode": "params",
					"version": 2,
					"tests": "// Load Postman BDD ... use http://chaijs.com/ for expressions\neval(postman.getGlobalVariable('postmanBDD'));\n\n// Load Alfresco schema\nvar schema = JSON.parse(postman.getGlobalVariable('alfresco-schema'));\ntv4.addSchema('http://alfresco.com/schema', schema);\nvar fragment = '#/definitions/Error';\nvar subschema = tv4.getSchema('http://alfresco.com/schema' + fragment);\n\ndescribe('\"Negative: Retrieve comments from invalid node\"', function() {\n    it('expect to return an error', function() {\n        expect(response).to.have.status(404);\n        expect(response).to.be.json;\n        expect(response.body).to.not.be.empty;\n    });\n    \n    describe('header', function() {\n        it('expect to have content type', function(){\n            expect(response).to.have.header('Content-Type');\n        });\n        it('expect to have content length', function(){\n            expect(response).to.have.header('Content-Length');\n        });\n    });\n    \n    describe('body', function() {\n        it('expect to have schema ' + fragment, function() {\n            expect(response.body).to.have.schema(subschema);\n        });\n    });\n});\n",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1458212347172,
					"name": "Negative: Retrieve comments from invalid node 2",
					"description": "",
					"collectionId": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"responses": [],
					"synced": true,
					"owner": "371756",
					"write": true,
					"collection": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"folder": "9f033b24-6d37-07e7-ad4e-cdb0b14d75ac",
					"isDeleted": true
				},
				{
					"id": "e6a0db25-8758-741a-2468-34a1ad3225f6",
					"headers": "Authorization: {{authorization}}\n",
					"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{notJoinedSiteNodeId}}/comments",
					"preRequestScript": null,
					"pathVariables": {},
					"method": "GET",
					"data": null,
					"dataMode": "params",
					"version": 2,
					"tests": "// Load Postman BDD ... use http://chaijs.com/ for expressions\neval(postman.getGlobalVariable('postmanBDD'));\n\n// Load Alfresco schema\nvar schema = JSON.parse(postman.getGlobalVariable('alfresco-schema'));\ntv4.addSchema('http://alfresco.com/schema', schema);\nvar fragment = '#/definitions/Error';\nvar subschema = tv4.getSchema('http://alfresco.com/schema' + fragment);\n\ndescribe('\"Negative: Retrieve comments from a not joined site\"', function() {\n    it('expect to return an error', function() {\n        expect(response).to.have.status(403);\n        expect(response).to.be.json;\n        expect(response.body).to.not.be.empty;\n    });\n    \n    describe('header', function() {\n        it('expect to have content type', function(){\n            expect(response).to.have.header('Content-Type');\n        });\n        it('expect to have content length', function(){\n            expect(response).to.have.header('Content-Length');\n        });\n    });\n    \n    describe('body', function() {\n        it('expect to have schema ' + fragment, function() {\n            expect(response.body).to.have.schema(subschema);\n        });\n    });\n});\n",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1458215615025,
					"name": "Negative: Retrieve comments from a not joined site",
					"description": "",
					"collectionId": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"responses": [],
					"synced": true,
					"owner": "371756",
					"write": true,
					"collection": "079c0b16-c98c-e534-ebca-cbda748a0761",
					"folder": "9f033b24-6d37-07e7-ad4e-cdb0b14d75ac",
					"isDeleted": true
				}
			],
			"timestamp": null
		},
		{
			"id": "6c22c782-639b-657d-e51d-7c6136b6686c",
			"name": "6 DELETE /nodes/{nodeId}/tags/{tagId}",
			"description": "",
			"order": [
				"56b22cd4-52f2-dc51-e79f-3cee81fd1979",
				"4a12eb29-55fe-a7d6-b99c-973463685049",
				"f137e719-651a-ccc0-9650-aeb472b2248c",
				"1bb6b642-63fb-c9fe-5aa5-48780c8072f0",
				"52362d83-76e8-9435-4d7c-5c0e77559dd9",
				"0bd6bc57-baa3-f7da-4f04-4fe8db6d2cd1",
				"058908dd-3e7c-c3b8-7a40-3d588d7203dc",
				"55063f77-e686-c309-8349-9506d0b2817b",
				"28200743-7bd4-2f17-a7f3-a95ea8982fe8",
				"b37ff7a7-4523-8b2c-e7ed-9c1fcf20eab3",
				"3a6f7748-0103-621b-89e1-dfab03682439",
				"2fef136b-a72a-5563-f087-5b7f4cbe06d0",
				"10712795-c48c-c70b-becc-fa6aca098ac2"
			],
			"owner": "371756",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823"
		}
	],
	"timestamp": 1458574690283,
	"owner": "371756",
	"remoteLink": "",
	"public": false,
	"requests": [
		{
			"id": "01142b2e-2210-0ec1-264d-87253a6f9ae0",
			"headers": "Authorization: {{user1Auth}}\nContent-Type: application/json\n",
			"url": "{{v0Url}}/api/sites",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[request.name] = responseCode.code === 200;\n\npostman.setGlobalVariable('siteName', JSON.parse(responseBody).shortName);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461574114289,
			"name": "Create public site",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"folder": "ff171584-9ce6-54bf-cf3c-8b188d5391ee",
			"rawModeData": "{\n    \"shortName\": \"testSitePublic{{$guid}}\",\n    \"title\": \"Test Public Site\",\n    \"description\": \"Public site for BCK testing\",\n    \"sitePreset\": \"site-dashboard\",\n    \"visbility\": \"PUBLIC\"\n}"
		},
		{
			"id": "058908dd-3e7c-c3b8-7a40-3d588d7203dc",
			"headers": "Authorization: {{user1Auth}}\nContent-Type: application/json\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/tags/{{tagId2}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[request.name] = responseCode.code === 204;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1463582817151,
			"name": "Delete tagId2",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "0690517f-c060-ffab-d266-922a83eeec7a",
			"headers": "Authorization: {{user1Auth}}\nContent-Type: application/json\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/tags",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(201, 'TagPaging', function() {\n    // other body checks\n    it('first tag expect to have values', function(){\n        var i = 0;\n        postman.setGlobalVariable('tagId2',response.body.list.entries[i].entry.id);\n        expect(response.body.list.entries[i].entry.tag,\"tag\").equals(\"\\u67e5\\u770b\\u5168\\u90e8\");\n    });\n    \n    it('second tag expect to have values', function(){\n        var i = 1;\n        postman.setGlobalVariable('tagId3',response.body.list.entries[i].entry.id);\n        expect(response.body.list.entries[i].entry.tag,\"tag\").equals(\"\\u67e5\\u770b\\u5168\\u91e8\");\n    });\n    \n    it('third tag expect to have values', function(){\n        var i = 2;\n        postman.setGlobalVariable('tagId4',response.body.list.entries[i].entry.id);\n        expect(response.body.list.entries[i].entry.tag,\"tag\").equals(\"%^&%&$^√Ç¬£@\");\n    });\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461675123879,
			"name": "Positive: Add multi-byte characters tags",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"rawModeData": "[\n  {\n    \"tag\":\"\\u67e5\\u770b\\u5168\\u90e8\"\n  },\n  {\n    \"tag\":\"\\u67e5\\u770b\\u5168\\u91e8\"\n  },\n  {\n    \"tag\":\"%^&%&$^√Ç¬£@\"\n  }\n]"
		},
		{
			"id": "0bd6bc57-baa3-f7da-4f04-4fe8db6d2cd1",
			"headers": "Authorization: {{user1Auth}}\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/tags/{{tagId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\n// RA-905 tag is not deleted\n//describeResponse(404, 'Error'); ",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1463642964859,
			"name": "Negative: Retrieve deleted tag (TODO)",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": []
		},
		{
			"id": "10712795-c48c-c70b-becc-fa6aca098ac2",
			"headers": "Authorization: {{user1Auth}}\n",
			"url": "{{v0Url}}/api/sites/{{siteName}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[request.name] = responseCode.code === 200;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1463582356735,
			"name": "Delete site",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "144728c8-3b84-b5f0-dd7f-189f4b426922",
			"headers": "Authorization: {{user1Auth}}\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/tags?maxItems=0",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(400, 'Error'); ",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461847840680,
			"name": "Negative: Retrieve tags with zero maxItems",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": []
		},
		{
			"id": "1bb6b642-63fb-c9fe-5aa5-48780c8072f0",
			"headers": "Authorization: {{user1Auth}}\nContent-Type: application/json\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/invalid-id/tags/{{tagId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(404, 'Error'); ",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461675034438,
			"name": "Negative: Delete tag with invalid node id",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "24038e60-7728-4a5b-f5e2-8790e3854671",
			"headers": "Authorization: {{user1Auth}}\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/tags?skipCount={{skipCount}}",
			"preRequestScript": "postman.setGlobalVariable('skipCount', JSON.parse(globals['tags']).list.pagination.totalItems + 2);",
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(200, 'TagPaging', function() {\n    // other body checks\n    it('expect to have values', function(){\n        expect(response.body.list.entries).to.be.empty;\n    });\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1463407094861,
			"name": "Positive: Retrieve tags with high skipCount",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": []
		},
		{
			"id": "28200743-7bd4-2f17-a7f3-a95ea8982fe8",
			"headers": "Authorization: {{user1Auth}}\nContent-Type: application/json\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/tags/{{tagId4}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[request.name] = responseCode.code === 204;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1463582823247,
			"name": "Delete tagId4",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "2fef136b-a72a-5563-f087-5b7f4cbe06d0",
			"headers": "Authorization: {{user1Auth}}\n",
			"url": "{{baseUrl}}/{{networkId}}/public/cmis/versions/1.1/browser/root?objectId={{nodeId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "cmisaction",
					"value": "delete",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"tests": "tests[request.name] = responseCode.code === 200;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1463582355246,
			"name": "Delete file",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": []
		},
		{
			"id": "329f7fd8-0cbd-4a62-c59d-ebec1dc5e98e",
			"headers": "Authorization: {{user1Auth}}\nContent-Type: multipart/form-data; boundary=----WebKitFormBoundarysNynRGJNGmF2MSzA\n",
			"url": "{{baseUrl}}/{{networkId}}/public/cmis/versions/1.1/browser/root/User Homes/{{user1UserName}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[request.name] = responseCode.code === 201;\n\n// save the new nodeId\nvar jsonData = JSON.parse(responseBody);\nvar nodeId = jsonData.properties[\"cmis:versionSeriesId\"].value;\npostman.setGlobalVariable(\"nodeId\", nodeId);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1463582326216,
			"name": "Create file",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"rawModeData": "------WebKitFormBoundarysNynRGJNGmF2MSzA\r\nContent-Disposition: form-data; name=\"cmisaction\"\r\n\r\ncreateDocument\r\n------WebKitFormBoundarysNynRGJNGmF2MSzA\r\nContent-Disposition: form-data; name=\"transaction\"\r\n\r\n\r\n------WebKitFormBoundarysNynRGJNGmF2MSzA\r\nContent-Disposition: form-data; name=\"propertyValue[0]\"\r\n\r\ntest-{{$guid}}\r\n------WebKitFormBoundarysNynRGJNGmF2MSzA\r\nContent-Disposition: form-data; name=\"propertyId[0]\"\r\n\r\ncmis:name\r\n------WebKitFormBoundarysNynRGJNGmF2MSzA\r\nContent-Disposition: form-data; name=\"propertyValue[1]\"\r\n\r\ncmis:document\r\n------WebKitFormBoundarysNynRGJNGmF2MSzA\r\nContent-Disposition: form-data; name=\"propertyId[1]\"\r\n\r\ncmis:objectTypeId\r\n------WebKitFormBoundarysNynRGJNGmF2MSzA\r\nContent-Disposition: form-data; name=\"filename\"\r\n\r\n\r\n------WebKitFormBoundarysNynRGJNGmF2MSzA\r\nContent-Disposition: form-data; name=\"contentType\"\r\n\r\n\r\n------WebKitFormBoundarysNynRGJNGmF2MSzA\r\nContent-Disposition: form-data; name=\"content\"; filename=\"test-lorem-ipsum.txt\"\r\nContent-Type: text/plain\r\n\r\nInteger justo leo, venenatis quis venenatis nec, accumsan ac massa. Aenean consequat mattis bibendum. Suspendisse erat massa, sodales eu vestibulum vitae, venenatis malesuada velit. In vitae leo non dui luctus rhoncus. Pellentesque in urna sit amet ligula euismod gravida. Suspendisse potenti. Sed nulla massa, luctus vel ultricies sed, fringilla blandit enim. Morbi porta adipiscing iaculis. Duis tincidunt, felis sit amet mollis aliquam, lacus ipsum iaculis quam, ullamcorper iaculis neque sapien a elit. Suspendisse nulla purus, pharetra vel suscipit ut, semper eu neque. Sed pharetra erat non massa ullamcorper ornare. Nam accumsan tellus et mi gravida nec tristique quam venenatis. Etiam vitae ipsum massa. Curabitur elementum, sem auctor convallis mattis, nunc dolor auctor odio, id bibendum enim massa eu ante.\r\n\r\nVestibulum adipiscing erat eu magna sodales ac pharetra erat tempor. Phasellus quis nisl et nisl rutrum ultrices quis nec tellus. Phasellus aliquet adipiscing nunc eu convallis. Suspendisse quam libero, dictum quis posuere at, vestibulum vitae augue. Quisque auctor aliquet urna, vitae euismod lacus consectetur a. Proin vel fringilla nisi. Morbi velit augue, adipiscing eget viverra sit amet, feugiat eu turpis. Proin at quam ligula. Pellentesque quam nisl, semper et suscipit a, hendrerit sit amet mauris. Pellentesque non sagittis odio. Donec venenatis augue interdum ante viverra varius. Sed eget purus eu leo porta sollicitudin in eu mi. Phasellus commodo, urna non volutpat aliquam, velit sem tincidunt quam, et convallis orci est tristique quam. Curabitur leo nulla, auctor ut volutpat sit amet, auctor non augue.\r\n\r\nNam nisi risus, bibendum nec pulvinar sed, dignissim quis lacus. Mauris feugiat mauris nec elit congue porttitor. Cras consectetur metus eu odio porta blandit. Vestibulum viverra lobortis scelerisque. In arcu nulla, bibendum ut pharetra vel, iaculis at tellus. Nulla euismod mi et lacus elementum lobortis. Fusce fringilla bibendum risus, eu eleifend sapien vestibulum in. In vel eros nisi, nec rutrum lacus. Sed egestas tristique vulputate. Proin odio nisl, imperdiet id vehicula a, suscipit non elit. Aliquam ac nunc augue. Duis consequat pharetra ligula. Nunc lorem diam, pretium sed blandit id, malesuada et tellus. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Donec rhoncus mi ac nibh pretium eu auctor orci semper. Aenean interdum, erat nec blandit dapibus, dui lectus gravida ipsum, vel facilisis ligula dolor vitae purus. Nullam nisi tellus, dapibus quis molestie a, luctus eu magna. Phasellus tortor lectus, consectetur vel interdum ut, sodales vel massa. Cras pellentesque urna diam. Sed imperdiet vehicula justo, fermentum auctor est sodales ut.\r\n\r\nSed at viverra nulla. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Cras malesuada sodales porttitor. Donec semper condimentum ipsum molestie hendrerit. Suspendisse potenti. Donec tempus laoreet nisl in dignissim. Donec ac arcu pretium lacus suscipit gravida. Nullam nec eros vel lectus imperdiet varius. Donec id metus dui. Integer lacus velit, porta eu sodales nec, convallis cursus est.\r\n\r\n------WebKitFormBoundarysNynRGJNGmF2MSzA--"
		},
		{
			"id": "341258ea-3edf-1648-543c-9fe9834ad1ca",
			"headers": "Authorization: {{user1Auth}}\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}};0.03/tags",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(200, 'TagPaging', function() {\n    // other body checks\n    it('expect to have length above 0', function() {\n        expect(response.body.list.entries).to.have.length.above(0,'entries length');\n    });\n});\n\npostman.setGlobalVariable('tags', responseBody);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1463130051254,
			"name": "Positive: Retrieve tags with version number",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": []
		},
		{
			"id": "3a6f7748-0103-621b-89e1-dfab03682439",
			"headers": "Authorization: {{user1Auth}}\n",
			"url": "{{baseUrl}}/{{networkId}}/public/cmis/versions/1.1/browser/root?objectId={{folderId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "cmisaction",
					"value": "deletetree",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[request.name] = responseCode.code === 200;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1463582353471,
			"name": "Delete folder",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": []
		},
		{
			"id": "4a12eb29-55fe-a7d6-b99c-973463685049",
			"headers": "Authorization: {{user1Auth}}\nContent-Type: application/json\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}};88.9/tags/{{tagId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(204); ",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1463130083669,
			"name": "Positive: Delete tag with version number",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "4cedefca-59f5-e73e-6963-9a284a2e9e2d",
			"headers": "Authorization: {{user1Auth}}\nContent-Type: application/json\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{tagId}}/tags",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(405, 'Error'); ",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1463058241303,
			"name": "Negative: Add tag to a tag",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"rawModeData": "{\n    \"tag\":\"tag 1 again\"\n}"
		},
		{
			"id": "50d4db60-997c-17a2-9dd6-5c749d4444a7",
			"headers": "Authorization: {{user1Auth}}\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/tags?skipCount=0&maxItems=2",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(200, 'TagPaging', function() {\n    // other body checks\n    // compare with loaded ones\n    it('expect equal lists', function() {\n        expect(JSON.stringify(JSON.parse(globals['networkTags']).list.entries.slice(0,2))).to.equal(JSON.stringify(response.body.list.entries));\n    });\n});\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461676344077,
			"name": "Positive: Retrieve only last 2 network tags",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": []
		},
		{
			"id": "52362d83-76e8-9435-4d7c-5c0e77559dd9",
			"headers": "Authorization: {{user1Auth}}\nContent-Type: application/json\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/tags/invalid-id-{{$guid}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(404, 'Error'); ",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461675056654,
			"name": "Negative: Delete tag with invalid tag id",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "55063f77-e686-c309-8349-9506d0b2817b",
			"headers": "Authorization: {{user1Auth}}\nContent-Type: application/json\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/tags/{{tagId3}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[request.name] = responseCode.code === 204;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1463582820831,
			"name": "Delete tagId3",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "56b22cd4-52f2-dc51-e79f-3cee81fd1979",
			"headers": "Authorization: {{user2Auth}}\nContent-Type: application/json\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/tags/{{tagId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(403, 'Error'); ",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461848292161,
			"name": "Negative: Delete tag from other user",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "5895ffa0-af1e-b937-cfcf-17e662002293",
			"headers": "Authorization: {{user1Auth}}\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/tags?maxItems=-1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(400, 'Error'); ",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461674879153,
			"name": "Negative: Retrieve network tags with negative maxItems",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": []
		},
		{
			"id": "59beaf28-4be0-0a70-3100-10df474db5ba",
			"headers": "Authorization: {{user2Auth}}\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/tags",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(403, 'Error'); ",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461674638405,
			"name": "Negative: Retrieve tags from another account",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": []
		},
		{
			"id": "629aae6c-9588-a06c-9f8b-bbdc0c6c1217",
			"headers": "Authorization: {{user1Auth}}\nContent-Type: application/json\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/comments",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[request.name] = responseCode.code === 201;\n\npostman.setGlobalVariable(\"commentId\", JSON.parse(responseBody).entry.id);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461574065834,
			"name": "Add comment",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"folder": "ff171584-9ce6-54bf-cf3c-8b188d5391ee",
			"rawModeData": "{\n    \"content\": \"This is a comment\"\n}"
		},
		{
			"id": "6745576c-34d1-efdb-00a1-8d2b6aa65e2a",
			"headers": "Authorization: {{user1Auth}}\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/tags/inva-{{$guid}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(404, 'Error'); ",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461674950956,
			"name": "Negative: Retrieve tag with invalid tag id",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": []
		},
		{
			"id": "6926a5b5-ceb3-f080-8fdd-81206354c99e",
			"headers": "Authorization: {{user1Auth}}\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/tags",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(200, 'TagPaging', function() {\n    // other body checks\n});\n\npostman.setGlobalVariable('networkTags', responseBody);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1463407165121,
			"name": "Positive: Retrieve network tags",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": []
		},
		{
			"id": "6b0c87b8-be83-d3a0-e329-0bd6d87376ab",
			"headers": "Authorization: {{user1Auth}}\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/tags?skipCount=0&maxItems=2",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(200, 'TagPaging', function() {\n    // other body checks\n    // compare with loaded ones\n    it('expect equal lists', function() {\n        expect(JSON.stringify(JSON.parse(globals['tags']).list.entries.slice(0,2))).to.equal(JSON.stringify(response.body.list.entries));\n    });\n});\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461676209806,
			"name": "Positive: Retrieve only last 2 tags",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": []
		},
		{
			"id": "72f03689-047d-2ab7-65de-8524297e6cc5",
			"headers": "Authorization: {{user1Auth}}\nContent-Type: application/json\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes//tags",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(404, 'Error'); ",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1463058428519,
			"name": "Negative: Add tag with empty node id",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"rawModeData": "{\n    \"tag\" : \"tag 1\"\n}"
		},
		{
			"id": "7e44fcd7-911e-d473-e356-6d66245fb8eb",
			"headers": "Authorization: {{user1Auth}}\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/tags?maxItems=-1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(400, 'Error'); ",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461674649765,
			"name": "Negative: Retrieve tags with negative maxItems",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": []
		},
		{
			"id": "81986ec6-e0bb-d0d3-aa7d-a92914855db0",
			"headers": "Authorization: {{user1Auth}}\nContent-Type: application/json\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/tags/invalid-id-{{$guid}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(404, 'Error');",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461674925574,
			"name": "Negative: Update tag with invalid tag id",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"rawModeData": "{\n  \"tag\": \"Updated side tag 1\"\n}"
		},
		{
			"id": "84ea5243-cf5b-11bb-f966-12b485f5926b",
			"headers": "Authorization: {{user1Auth}}\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/tags?skipCount=-1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(400, 'Error'); ",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461674646885,
			"name": "Negative: Retrieve tags with negative skipCount",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": []
		},
		{
			"id": "8b85725b-2b7c-b6be-859a-b672b5bdf767",
			"headers": "Authorization: {{user1Auth}}\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/invalid-id-{{guid}}/tags",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(404, 'Error'); ",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461674630389,
			"name": "Negative: Retrieve tags from invalid node",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": []
		},
		{
			"id": "9ba26256-efc5-ffb3-12e0-a299b8effd6d",
			"headers": "Authorization: {{user1Auth}}\n",
			"url": "{{baseUrl}}/{{networkId}}/public/cmis/versions/1.1/browser/root/User Homes/{{user1UserName}}",
			"preRequestScript": "postman.setGlobalVariable(\"testFolderName\", \"test-\" + new Date().getTime());",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "cmisaction",
					"value": "createFolder",
					"type": "text",
					"enabled": true
				},
				{
					"key": "propertyId[0]",
					"value": "cmis:name",
					"type": "text",
					"enabled": true
				},
				{
					"key": "propertyValue[0]",
					"value": "test-{{$guid}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "propertyId[1]",
					"value": "cmis:objectTypeId",
					"type": "text",
					"enabled": true
				},
				{
					"key": "propertyValue[1]",
					"value": "cmis:folder",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[request.name] = responseCode.code === 201;\n\n// save the new nodeId\nvar jsonData = JSON.parse(responseBody);\nvar nodeId = jsonData.properties[\"cmis:objectId\"].value;\npostman.setGlobalVariable(\"folderId\", nodeId);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461680521783,
			"name": "Create folder",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": []
		},
		{
			"id": "a2186b10-8d78-b704-e2a3-2663cee44887",
			"headers": "Authorization: {{user1Auth}}\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/tags?skipCount={{skipCount}}",
			"preRequestScript": "postman.setGlobalVariable('skipCount', JSON.parse(globals['networkTags']).list.pagination.count + 2);",
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(200, 'TagPaging', function() {\n    // other body checks\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1462953365528,
			"name": "Positive: Retrieve network tags with high skipCount",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": []
		},
		{
			"id": "a42c9f3c-00f2-bfcb-eb7c-4c0bef83d135",
			"headers": "Authorization: {{user1Auth}}\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/tags?skipCount=2",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(200, 'TagPaging', function() {\n    // other body checks\n    // compare with loaded ones\n    it('expect equal lists', function() {\n        expect(JSON.stringify(JSON.parse(globals['tags']).list.entries.slice(2))).to.equal(JSON.stringify(response.body.list.entries));\n    });\n});\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461671978301,
			"name": "Positive: Retrieve but skip the first 2 tags",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": []
		},
		{
			"id": "a4aa769a-3f79-7c9f-17c8-0a390109eaae",
			"headers": "Authorization: {{user1Auth}}\nContent-Type: application/json\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/tags",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(400, 'Error'); ",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461674594133,
			"name": "Negative: Add tag with empty body",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"rawModeData": "{\n}"
		},
		{
			"id": "a4e45449-5abb-358a-d642-2b16c26677ae",
			"headers": "Authorization: {{user1Auth}}\nContent-Type: application/json\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{folderId}}/tags",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(201, 'TagEntry', function() {\n    // other body checks\n    it('expect to have values', function(){\n        expect(response.body.entry.tag,\"tag\").equals(\"tag 1\");\n    });\n});\n\npostman.setGlobalVariable(\"tagId5\", response.body.entry.id);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1463582978243,
			"name": "Positive: Add tag to folder",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"rawModeData": "{\n    \"tag\":\"tag 1\"\n}\n"
		},
		{
			"id": "a843c447-eecc-99a7-f174-a21dd8e37023",
			"headers": "Authorization: {{user1Auth}}\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/sites/{{siteName}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"tests": "postman.setGlobalVariable('siteGuid', JSON.parse(responseBody).entry.guid);",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1460959790011,
			"name": "Retrieve site information",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"folder": "ff171584-9ce6-54bf-cf3c-8b188d5391ee"
		},
		{
			"id": "aa4131fe-1dfb-919b-fad9-474cafab5117",
			"headers": "Authorization: {{user1Auth}}\nContent-Type: application/json\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/tags",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\n// RA-1002\n//describeResponse(409, 'Error');\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1463642860771,
			"name": "Negative: Add tag to file again (TODO)",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"rawModeData": "{\n    \"tag\":\"tag 1\"\n}"
		},
		{
			"id": "b37ff7a7-4523-8b2c-e7ed-9c1fcf20eab3",
			"headers": "Authorization: {{user1Auth}}\nContent-Type: application/json\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/tags/{{tagId5}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[request.name] = responseCode.code === 204;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1463582825590,
			"name": "Delete tagId5",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "b929d89b-a78a-f4e3-79a1-8c8d140c0bd3",
			"headers": "Authorization: {{user1Auth}}\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/tags?skipCount=-1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(400, 'Error'); ",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461674693076,
			"name": "Negative: Retrieve network tags with negative skipCount",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": []
		},
		{
			"id": "ba24d6f1-74c3-b8ec-1d87-cce2dd3b69b7",
			"headers": "Authorization: {{user1Auth}}\nContent-Type: application/json\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}};0.3/tags",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(201, 'TagEntry', function() {\n    // other body checks\n    it('expect to have values', function(){\n        expect(response.body.entry.tag,\"tag\").equals(\"tag 1\");\n    });\n});\n\npostman.setGlobalVariable(\"tagId\", response.body.entry.id);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1463582970738,
			"name": "Positive: Add tag to file with version number",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"rawModeData": "{\n    \"tag\":\"tag 1\"\n}\n"
		},
		{
			"id": "bd5a19d1-71e6-dbee-b399-3e3f2a7bf3fa",
			"headers": "Authorization: {{user1Auth}}\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/tags?maxItems=0",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(400, 'Error'); ",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461847931735,
			"name": "Negative: Retrieve network tags with zero maxItems",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": []
		},
		{
			"id": "c05fc86c-db54-6d3b-4db1-e61b56f9b44c",
			"headers": "Authorization: {{user1Auth}}\nContent-Type: application/json\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{commentId}}/tags",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(405, 'Error'); ",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461673708654,
			"name": "Negative: Add tag to a comment",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"rawModeData": "{\n    \"tag\":\"tag 1\"\n}"
		},
		{
			"id": "c0fbc0b9-9a95-5f0b-0341-4614957d7cfd",
			"headers": "Authorization: {{user1Auth}}\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/tags/{{tagId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(200, 'TagEntry', function() {\n    // other body checks\n    it('expect to have values', function(){\n        expect(response.body.entry.tag,\"tag\").equals(\"tag 1\");\n        expect(response.body.entry.id,\"id\").equals(globals[\"tagId\"]);\n    });\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461673489182,
			"name": "Positive: Retrieve tag",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": []
		},
		{
			"id": "c300fdff-1337-9183-5d93-8f324d3a3251",
			"headers": "Authorization: {{user1Auth}}\nContent-Type: application/json\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/tags",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(400, 'Error'); ",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461673731669,
			"name": "Negative: Add empty tag",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"rawModeData": "{\n    \"tag\":\"\"\n}"
		},
		{
			"id": "cc2e5304-fbe4-aace-fdd0-1e5dbfcaad26",
			"headers": "Authorization: {{user1Auth}}\nContent-Type: application/json\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/invalid-id-{{$guid}}/tags",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(404, 'Error'); ",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461676158258,
			"name": "Negative: Add tag with invalid node id",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"rawModeData": "{\n    \"tag\" : \"tag 1\"\n}"
		},
		{
			"id": "cce602ac-6647-5d3e-20c7-99290ea2bfbf",
			"headers": "Authorization: {{user1Auth}}\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/tags?skipCount=2",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(200, 'TagPaging', function() {\n    // other body checks\n    // compare with loaded ones\n    it('expect equal lists', function() {\n        expect(JSON.stringify(JSON.parse(globals['networkTags']).list.entries.slice(2))).to.equal(JSON.stringify(response.body.list.entries));\n    });\n});\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461672661734,
			"name": "Positive: Retrieve network tags but skip the first 2",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": []
		},
		{
			"id": "d5247376-1b57-a926-19d9-9fc7189ef3d9",
			"headers": "Authorization: {{user1Auth}}\nContent-Type: application/json\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/tags/{{tagId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(400, 'Error');",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461674936135,
			"name": "Negative: Update tag with empty body",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"rawModeData": "{\n}"
		},
		{
			"id": "da0d4d6d-4ed3-a5f7-efd1-5f768aae4507",
			"headers": "Authorization: {{user1Auth}}\nContent-Type: application/json\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/tags/{{tagId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\ndescribeResponse(400, 'Error'); ",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461674900760,
			"name": "Negative: Update tag with empty content",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"rawModeData": "{\n  \"tag\": \"\"\n}"
		},
		{
			"id": "f137e719-651a-ccc0-9650-aeb472b2248c",
			"headers": "Authorization: {{user1Auth}}\nContent-Type: application/json\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/nodes/{{nodeId}}/tags/{{tagId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\n// RA-905\n//describeResponse(404, 'Error'); ",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1463642928699,
			"name": "Negative: Delete deleted tag (TODO)",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "f772800b-4acd-5550-9cf4-4050ad8e78b5",
			"headers": "Authorization: {{user1Auth}}\nContent-Type: application/json\n",
			"url": "{{baseUrl}}/{{networkId}}/public/alfresco/versions/1/tags/{{tagId}}TODO",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "eval(globals['helperFunctions']);\n\n// RA-903\n/*describeResponse(200, 'TagEntry', function() {\n    // other body checks\n    it('expect to have values', function(){\n        expect(response.body.entry.tag,\"tag\").equals(\"Updated tag 1\");\n        expect(response.body.entry.id,\"id\").equals(globals[\"tagId\"]);\n    });\n});*/",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1463642898766,
			"name": "Positive: Update tag from a node (TODO)",
			"description": "",
			"collectionId": "71c78dc8-bb3d-4937-b325-2c0ad9954823",
			"responses": [],
			"rawModeData": "{\n  \"tag\": \"Updated tag 1\"\n}"
		}
	]
}